<!DOCTYPE html>
<html lang="ru">
  <head>
    <title><%= "#{settings[:app_name]&.capitalize}#{content_for(:title).present? ? " | #{content_for(:title)}" : ''}" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <link rel="manifest" href="/manifest.json">
    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <script>
          if (typeof Telegram !== "undefined") {
              <% if ENV.fetch('HOST', '').include?('mirena') %>
                Telegram.WebApp.setHeaderColor('#3396a5');
                Telegram.WebApp.setBackgroundColor('#3396a5');
                Telegram.WebApp.setBottomBarColor('#3396a5');
              <% else %>
                Telegram.WebApp.setHeaderColor('#000001');
                Telegram.WebApp.setBackgroundColor('#000001');
                Telegram.WebApp.setBottomBarColor('#000001');
              <% end %>

              document.addEventListener("DOMContentLoaded", () => {
                  setTimeout(() => {
                      Telegram.WebApp.MainButton.setText("Оформить заказ");
                      Telegram.WebApp.MainButton.show();
                  }, 1000);

                  const tg = Telegram.WebApp;
                  const ball = document.getElementById('ball');

                  // Проверка поддержки Accelerometer API
                  if (tg.Accelerometer && ball) {
                      try {
                          tg.Accelerometer.start();
                          console.log('Accelerometer started');

                          tg.Accelerometer.on('acceleration', (data) => {
                              const moveX = data.x * 30; // Увеличил множитель
                              const moveY = data.y * 30;
                              console.log(`Accel: X=${data.x}, Y=${data.y}`);

                              ball.style.transform = `translate(
                                ${-50 + moveX}%,
                                ${-50 + moveY}%
                              )`;
                          });

                      } catch (e) {
                          tg.showAlert("Ошибка доступа к датчикам: " + e.message);
                      }
                  } else {
                      tg.showAlert("Акселерометр не поддерживается в вашей версии Telegram");
                  }
              });
          }
    </script>

    <%= vite_client_tag %>
    <%= vite_stylesheet_tag(ENV.fetch('HOST', '').include?('mirena') ? 'mirena' : 'application') %>
    <%= vite_javascript_tag 'application' %>
  </head>

  <body>
    <%= render partial: '/layouts/partials/header' %>
    <main>
      <div class="container mx-auto">
        <div id="modal" class="modal <%= yield :model_class %>" style="<%= yield :model_style %>">
          <%= yield :modal %>
        </div>

        <%= yield %>
      </div>
    </main>

    <%= render partial: '/layouts/partials/footer' %>
    <%= render partial: '/layouts/partials/yandex_metrika' if Setting.fetch_value(:ym).present? %>
  </body>
</html>
