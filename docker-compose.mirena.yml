services:
  base: &base
    image: webapp
    build: .
    env_file: ./.env
    volumes:
      - gems:/usr/local/bundle
      - .:/app

  webapp:
    <<: *base
    container_name: webapp
    hostname: webapp
    depends_on:
      - psql
      - redis
    entrypoint: ["./bin/docker-entrypoint"]
    # command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    networks:
      net:
      proxy-net:
        ipv4_address: 172.29.0.3
    restart: always

  sidekiq:
    <<: *base
    container_name: webapp-sidekiq
    hostname: webapp-sidekiq
    depends_on:
      - psql
      - redis
    entrypoint: []
    command: >
      sh -c "SIDEKIQ_QUEUE=telegram_bot bundle exec sidekiq -q telegram_bot -c 1 &
             bundle exec sidekiq -q default &&
             wait"
    networks:
      net:
    restart: always

  psql:
    image: postgres:16.1
    container_name: webapp-psql
    hostname: psql
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Europe/Moscow
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - net
    restart: unless-stopped

  redis:
    image: redis:7.4.2-alpine3.21
    container_name: webapp-redis
    command: redis-server
    restart: unless-stopped
    networks:
      - net
    volumes:
      - redis:/data

volumes:
  db_data:
  redis:
  gems:

networks:
  net:
  proxy-net:
    external: true